import Microsoft.AspNetCore.Http
import Microsoft.OData
import Microsoft.AspNetCore.JsonPatch
import Microsoft.AspNetCore.Mvc
import Microsoft.AspNet.OData
import Microsoft.AspNet.OData.Routing
import Microsoft.EntityFrameworkCore
import Microsoft.EntityFrameworkCore.Infrastructure
import Microsoft.Extensions.Options
import System.Collections.Generic
import System.ComponentModel.DataAnnotations
import Harmony.Core.EF.Extensions
import Harmony.Core.Interface
import Harmony.OData
import Harmony.AspNetCore
import Newtonsoft.Json
import Services.Models
import System.Linq

namespace Services.Controllers
	public partial class BbqsController extends ODataController
		{ODataRoute("(Id={aId})")}
		{ProducesResponseType(StatusCodes.Status204NoContent)}
		{ProducesResponseType(StatusCodes.Status404NotFound)}
		{HttpDelete}
		;;; <summary>
		;;; Delete a bbq.
		;;; </summary>
		;;; <param name="aId">ID of BBQ</param>
		;;; <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
		public method DeleteBbq, @IActionResult
			{FromODataUri}
			required in aId, int
		proc
			;;Get the bbq to be deleted
			data bbqToRemove = _DbContext.Bbqs.Find(aId)

			;;Did we find it?
			if (bbqToRemove == ^null)
				mreturn NotFound()

			;;Find orders related to that BBQ, delete them
			data ordersByBBQ = _DbContext.Orders.AsNoTracking().FindAlternate("Bbqid",aId)
			data order, @Order
			foreach order in ordersByBBQ
			begin
				_DbContext.Orders.Remove(order)
			end

			;;Delete and commit
			_DbContext.Bbqs.Remove(bbqToRemove)
			_DbContext.SaveChanges()

			mreturn NoContent()

		endmethod
	endclass
endnamespace