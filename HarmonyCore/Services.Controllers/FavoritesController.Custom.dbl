import Microsoft.AspNetCore.Http
import Microsoft.OData
import Microsoft.AspNetCore.JsonPatch
import Microsoft.AspNetCore.Mvc
import Microsoft.AspNet.OData
import Microsoft.AspNet.OData.Routing
import Microsoft.EntityFrameworkCore
import Microsoft.EntityFrameworkCore.Infrastructure
import Microsoft.Extensions.Options
import System.Collections.Generic
import System.ComponentModel.DataAnnotations
import Harmony.Core.EF.Extensions
import Harmony.Core.Interface
import Harmony.OData
import Harmony.AspNetCore
import Newtonsoft.Json
import Services.Models
import System.Linq

namespace Services.Controllers
	public partial class FavoritesController extends ODataController
		{HttpPost}
		{ODataRoute("PostFavorites")}
		{Produces("application/json")}
		{ProducesResponseType(^typeof(IEnumerable<Favorite>),StatusCodes.Status200OK)}
		{ProducesResponseType(StatusCodes.Status400BadRequest)}
		public method PostFavorites, @IActionResult
			parameters, @ODataActionParameters
		proc
			;; Check ModelState
			if (!ModelState.IsValid)
				mreturn ValidationHelper.ReturnValidationError(ModelState)

			;; Get favorites
			data favorites, @List<Favorite>, ((IEnumerable<Favorite>)parameters["Favorites"]).ToList()
			disposable data keyFactory = (@IPrimaryKeyFactory)_ServiceProvider.GetService(^typeof(IPrimaryKeyFactory))

			try
			begin
				data item, @Favorite
				foreach item in favorites
				begin
					;; check if Id exists, if it doesn't, assign it a primary key and add it
					data existing = _DbContext.Favorites.Find(item.Id)
					if(existing == ^null) then
					begin
						keyFactory.AssignPrimaryKey(item)
						_DbContext.Favorites.Add(item)
					end
					;; Else replace it
					else
					begin
						item.CopyTo(existing)
					end
				end
            
				;; Save changes and return result
				_DbContext.SaveChanges(keyFactory)
			end
			catch (e, @ValidationException)
			begin
				ModelState.AddModelError("RelationValidation", e.Message)
				mreturn ValidationHelper.ReturnValidationError(ModelState)
			end
			endtry
            
			data madeAtUrl = string.Format("{0}://{1}/Favorites(Userid={2})", Request.Scheme, Request.Host, favorites.FirstOrDefault().Userid)
			mreturn new CreatedResult(madeAtUrl, favorites)
		endmethod

		{ODataRoute("(Userid={aUserid})")}
		{Produces("application/json")}
		{ProducesResponseType(StatusCodes.Status204NoContent)}
		{ProducesResponseType(StatusCodes.Status404NotFound)}
		{EnableQuery(MaxExpansionDepth=4)}
		public method DeleteFavoritesByUserid, @IActionResult
			{FromODataUri}
			required in aUserid, int
		proc
			data result = _DbContext.Favorites.AsNoTracking().FindAlternate("Userid",aUserid)?.ToList()
			if (result == ^null)
				mreturn NotFound()
            
			;; Delete each favorite in list, then commit
			data item, @Favorite
			foreach item in result
			begin
				_DbContext.Favorites.Remove(item)
			end

			_DbContext.SaveChanges()

			mreturn NoContent()

		endmethod
	endclass
endnamespace